Next steps:

 - arithmetic
   - logical operators (ok)
   - NOT for boolean (ok)
 - relational operators
   - <> (ok)
   - equality (ok)
   - test for the operators (ok)
 - dealing with booleans
   - (labels in VM?) (ok)
   - short-circuit operators (ok)
   - ternary operator (ok)
 - strings
   - special chars = '\nrtx (ok)
   - concatenation (ok)
   - multiline strings (ok)
   - embedded code (ok)
 - comments (ok)
 - use readline (ok)
 - remove reallocs (ok)
 - arrays (ok)
   - equality (ok)
   - len operator (ok)
   - array access (ok)
 - nil? operator (ok -+)
 - array slices (ok)
 - string subscripts (ok)
 - partial equality
 - documentation

 - tables

Other steps:

 - environments
 - assingment + scope
 - garbage collection
 - control structures
 - regular expressions
 - functions + closures + yields
 - structured functions (metamethods, functions, visibility)
 - const correctness
 - error management
 - match
   - wildcart '_' identifier
 - goto
 - imports
 - debugging
 - documentation

More steps:

 - improve C interface
 - improve REPL
 - standard library
   - string
   - regular expressions
   - I/O, files
   - POSIX
   - unit testing
 - weak tables
 - tail calls
 - unsafe blocks
 - threads
 - unicode
 - documentation generator
 - JIT
 - generate executable

FUTURE

 - two types of number - integer and double
 - two types of string - reference and string
